{"version":3,"sources":["visuals/jeremyVisual1.js","visuals/jeremyVisual2.js","visuals/daphneVisual1.js","visuals/daphneVisual2.js","visuals/daphneVisual3.js","visuals/daphneVisual4.js","App.js","serviceWorker.js","index.js"],"names":["JeremyVisual1","name","canvas","Object","classCallCheck","this","backgroundFillStyle","c","getContext","fillStyle","fillRect","width","height","i","dataArray","length","data","rand_r","Math","floor","random","rand_g","rand_b","rectWidth","ceil","fullscreen","document","getElementsByTagName","style","JeremyVisual2","pen","Turtle","TURTLE","moveTo","right","n","nMax","dataAverage","dataHighAvg","dataMidAvg","dataLowAvg","p","ctx","dataSum","dataDifference","abs","dataHighest","dataLowest","dataHighSum","dataMidSum","dataLowSum","strokeStyle","lineWidth","pendown","forward","stroke","penup","DaphneVisual1","clearRect","lowest_freq1","highest_freq1","lowest_freq2","highest_freq2","lowest_freq3","highest_freq3","third","opac","sides","dist","angle","rads","PI","r","sin","startX","startY","positions1","push","x","y","current_x","current_y","j","next_x","next_y","lineTo","positions2","positions3","DaphneVisual2","next_data","dir","DaphneVisual3","DaphneVisual4","antiData","canvasContext","beginPath","arc","fill","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","visuals","audioPlayer","audioContext","audioPlayerSource","audioAnalyser","bufferLength","processAudioHandle","selectedVisual","audioPlayerFile","visualsList","_this2","addEventListener","documentElement","requestFullscreen","window","innerWidth","innerHeight","exitFullscreen","bind","setState","createAudioPlayer","createAudioContext","createAudioPlayerSource","createAudioAnalyzer","createAudioBuffer","fillAudioBuffer","connectAudioPlayerSourceToAudioAnalyzer","connectAudioAnalyzerToDestination","createCanvasContext","createTurtle","changeVisual","onchange","changeAudioFile","processAudio","fullscreenElement","webkitIsFullScreen","mozFullScreen","msFullscreenElement","src","setAttribute","id","callback","_this3","onplay","AudioContext","createMediaElementSource","fftSize","createAnalyser","frequencyBinCount","Uint8Array","getByteTimeDomainData","connect","destination","canvasWidth","canvasHeight","requestAnimationFrame","skip","draw","visualNum","console","log","init","files","URL","createObjectURL","_this4","react_default","a","createElement","className","ref","e","border","type","map","v","key","onClick","cursor","Component","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3a1a32a.chunk.js","sourcesContent":["export default class JeremyVisual1 {\n  constructor(name, canvas) {\n    this.name = name;\n    this.canvas = canvas;\n    this.backgroundFillStyle = '';\n  }\n\n  init() {\n    this.c = this.canvas.getContext('2d');\n  }\n\n  draw() {\n    let c = this.c;\n\n    c.fillStyle = this.backgroundFillStyle;\n    c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    for (let i = 0; i < this.dataArray.length; i++) {\n      let data = this.dataArray[i];\n\n      let rand_r = Math.floor(Math.random() * 255);\n      let rand_g = Math.floor(Math.random() * 255);\n      let rand_b = Math.floor(Math.random() * 255);\n\n      c.fillStyle = 'rgba(' + rand_r + ', 0, ' + rand_b + ', 1.0)';\n      let rectWidth = Math.ceil(this.canvas.width / this.dataArray.length);\n      c.fillRect((i + 1) * rectWidth, data, rectWidth, 15);\n\n      c.fillStyle = 'rgba(0, ' + rand_g + ', ' + rand_b + ', 1.0)';\n      c.fillRect((i + 1) * rectWidth, this.canvas.height - data, rectWidth, 15);\n\n      if (data <= 8) {\n        let rand_r = Math.floor(Math.random() * 255);\n        let rand_g = Math.floor(Math.random() * 255);\n        let rand_b = Math.floor(Math.random() * 255);\n\n        c.fillStyle = 'rgba(' + this.dataArray[rand_r] + ', ' + this.dataArray[rand_g] + ', ' + this.dataArray[rand_b] + ', 1.0)';\n        this.backgroundFillStyle = c.fillStyle;\n\n        if (this.fullscreen) {\n          document.getElementsByTagName(\"body\")[0].style = 'background: ' + c.fillStyle;\n        }\n      }\n    }\n  }\n}\n","import Turtle from 'turtle-canvas/browser/turtle-canvas.min';\n\nexport default class JeremyVisual2 {\n  constructor(name, canvas) {\n    this.name = name;\n    this.canvas = canvas;\n    this.pen = null;\n  }\n\n  init() {\n    this.pen = new Turtle.TURTLE(this.canvas);\n    this.pen.moveTo(this.canvas.width / 2, this.canvas.height / 2);\n    this.pen.right(90);\n\n    this.n = 0;\n    this.nMax = 1000;\n  }\n\n  draw() {\n    let p = this.pen;\n    let c = p.ctx;\n    let n = this.n;\n    let nMax = this.nMax;\n    let dataAverage = 0;\n    let dataSum = 0;\n    let dataDifference = Math.abs(this.dataArray[0] - this.dataArray[this.dataArray.length - 1]);\n    let dataHighest = 0;\n    let dataLowest = 255;\n    let dataHighAvg = 0;\n    let dataHighSum = 0;\n    let dataMidAvg = 0;\n    let dataMidSum = 0;\n    let dataLowAvg = 0;\n    let dataLowSum = 0;\n\n    c.fillStyle = 'rgba(0, 0, 0, 1.0)';\n    c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    c.strokeStyle = 'rgba(255, 255, 255, 1.0)';\n    c.lineWidth = 1;\n\n    for (let i = 0; i < this.dataArray.length; i++) {\n      let data = this.dataArray[i];\n      dataSum += data;\n\n      if (data > dataHighest) {\n        dataHighest = data;\n      }\n\n      if (data < dataLowest) {\n        dataLowest = data;\n      }\n\n      if (i < (this.dataArray.length / 3)) {\n        dataLowSum += data;\n\n      } else if (i < (this.dataArray.length / 3 * 2)) {\n        dataMidSum += data;\n\n      } else {\n        dataHighSum += data;\n      }\n    }\n\n    dataAverage = Math.floor(dataSum / this.dataArray.length);\n    dataLowAvg = Math.floor(dataLowSum / (this.dataArray.length / 3));\n    dataMidAvg = Math.floor(dataMidSum / (this.dataArray.length / 3));\n    dataHighAvg = Math.floor(dataHighSum / (this.dataArray.length / 3));\n\n    p.moveTo(this.canvas.width / 2, this.canvas.height / 2 - dataDifference);\n    p.pendown();\n    c.strokeStyle = 'rgba(' + (dataLowAvg + dataAverage) % 255 + ', ' + (dataMidAvg + dataAverage) % 255 + ', ' + (dataHighAvg + dataAverage) % 255 + ', 1.0)';\n\n    for (let i = n; i > 0; i--) {\n      p.right(dataAverage);\n      p.forward(dataHighest);\n\n      p.right(-(dataAverage * 2));\n      p.forward(255 - dataLowest);\n\n      p.right(-(dataLowAvg * 2));\n      p.forward(dataMidAvg / 3);\n\n      p.right(Math.abs(dataHighAvg * 2 - dataLowAvg));\n      p.forward(dataMidAvg / 2);\n    }\n\n    p.stroke();\n    p.penup();\n    p.moveTo(this.canvas.width / 2, this.canvas.height / 2);\n\n    this.n = (n + 1) % nMax;\n  }\n}\n","import Turtle from 'turtle-canvas/browser/turtle-canvas.min';\n\nexport default class DaphneVisual1 {\n  constructor(name, canvas) {\n    this.name = name;\n    this.canvas = canvas;\n    this.pen = null;\n  }\n\n  init() {\n    this.pen = new Turtle.TURTLE(this.canvas);\n    this.pen.right(270);\n  }\n\n  draw() {\n    let pen = this.pen;\n    let c = pen.ctx;\n\n    c.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    let lowest_freq1 = this.dataArray[0];\n    let highest_freq1 = this.dataArray[0];\n\n    let lowest_freq2 = this.dataArray[0];\n    let highest_freq2 = this.dataArray[0];\n\n    let lowest_freq3 = this.dataArray[0];\n    let highest_freq3 = this.dataArray[0];\n\n    let third = Math.floor(this.dataArray.length / 3);\n\n    let opac = 1.0;\n\n    for (let i = 0; i < this.dataArray.length; i++) {\n      let data = this.dataArray[i];\n\n      if (i < third) {\n        if (data > highest_freq1) {\n          highest_freq1 = data;\n        } else if (data < lowest_freq1) {\n          lowest_freq1 = data;\n        }\n      } else if ((i > third) && (i < (third * 2))) {\n        if (data > highest_freq2) {\n          highest_freq2 = data;\n        } else if (data < lowest_freq2) {\n          lowest_freq2 = data;\n        }\n      } else if (i > (third * 2)) {\n        if (data > highest_freq3) {\n          highest_freq3 = data;\n        } else if (data < lowest_freq3) {\n          lowest_freq3 = data;\n        }\n      }\n    }\n\n    c.fillStyle = \"rgba(0,0,0,1.0)\";\n    c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    opac = (Math.abs(highest_freq3 - lowest_freq1) / 255);\n\n    c.strokeStyle = \"rgba(\" + lowest_freq1 + \",255,0,\" + opac + \")\";\n    c.lineWidth = (1.0 - opac) * 12;\n\n    let sides = 3 + Math.floor(((highest_freq1 - lowest_freq1) / 2) / 8);\n    let dist = 100;\n    let angle = 360 / sides;\n    let rads = (180 / sides) * (Math.PI / 180);\n    let r = dist / (2 * Math.sin(rads));\n    let startX = (this.canvas.width / 2) - r;\n    let startY = (this.canvas.height / 2) + (dist / 2);\n    pen.moveTo(startX, startY);\n    pen.pendown();\n    let positions1 = [];\n\n    for (let i = 0; i < sides; i++) {\n      positions1.push([pen.x, pen.y]);\n      pen.forward(dist);\n      pen.right(angle);\n    }\n    pen.stroke();\n    pen.penup();\n\n    for (let i = 0; i < positions1.length; i++) {\n      let current_x = positions1[i][0];\n      let current_y = positions1[i][1];\n\n      for (let j = 0; j < (positions1.length - i); j++) {\n        let next_x = positions1[i + j][0];\n        let next_y = positions1[i + j][1];\n        pen.moveTo(current_x, current_y);\n        pen.pendown();\n        c.lineTo(next_x, next_y);\n        pen.penup();\n      }\n    }\n\n    pen.penup();\n    opac = (Math.abs(highest_freq1 - lowest_freq2) / 255);\n\n    c.strokeStyle = \"rgba(0,\" + lowest_freq2 + \",255,\" + opac + \")\";\n    c.lineWidth = (1.0 - opac) * 10;\n\n    sides = 3 + Math.floor(((highest_freq2 - lowest_freq2) / 2) / 8);\n    dist = 100;\n    angle = 360 / sides;\n    rads = (180 / sides) * (Math.PI / 180);\n    r = dist / (2 * Math.sin(rads));\n    startX = (this.canvas.width / 2) - r;\n    startY = (this.canvas.height / 2) + (dist / 2);\n    pen.moveTo(startX, startY);\n    pen.pendown();\n    let positions2 = [];\n\n    for (let i = 0; i < sides; i++) {\n      positions2.push([pen.x, pen.y]);\n      pen.forward(dist);\n      pen.right(angle);\n    }\n    pen.stroke();\n    pen.penup();\n\n    for (let i = 0; i < positions2.length; i++) {\n      let current_x = positions2[i][0];\n      let current_y = positions2[i][1];\n\n      for (let j = 0; j < (positions2.length - i); j++) {\n        let next_x = positions2[i + j][0];\n        let next_y = positions2[i + j][1];\n        pen.moveTo(current_x, current_y);\n        pen.pendown();\n        c.lineTo(next_x, next_y);\n        pen.penup();\n      }\n    }\n\n    pen.penup();\n    opac = (Math.abs(highest_freq2 - lowest_freq3) / 255);\n\n    c.strokeStyle = \"rgba(255,0,\" + lowest_freq3 + \",\" + opac + \")\";\n    c.lineWidth = (1.0 - opac) * 8;\n\n    sides = 3 + Math.floor(((highest_freq3 - lowest_freq3) / 2) / 8);\n    dist = 100;\n    angle = 360 / sides;\n    rads = (180 / sides) * (Math.PI / 180);\n    r = dist / (2 * Math.sin(rads));\n    startX = (this.canvas.width / 2) - r;\n    startY = (this.canvas.height / 2) + (dist / 2);\n    pen.moveTo(startX, startY);\n    pen.pendown();\n    let positions3 = [];\n\n    for (let i = 0; i < sides; i++) {\n      positions3.push([pen.x, pen.y]);\n      pen.forward(dist);\n      pen.right(angle);\n    }\n    pen.stroke();\n    pen.penup();\n\n    for (let i = 0; i < positions3.length; i++) {\n      let current_x = positions3[i][0];\n      let current_y = positions3[i][1];\n\n      for (let j = 0; j < (positions3.length - i); j++) {\n        let next_x = positions3[i + j][0];\n        let next_y = positions3[i + j][1];\n        pen.moveTo(current_x, current_y);\n        pen.pendown();\n        c.lineTo(next_x, next_y);\n        pen.penup();\n      }\n    }\n  }\n}\n","import Turtle from 'turtle-canvas/browser/turtle-canvas.min';\n\nexport default class DaphneVisual2 {\n  constructor(name, canvas) {\n    this.name = name;\n    this.canvas = canvas;\n  }\n\n  init() {\n    this.pen = new Turtle.TURTLE(this.canvas);\n  }\n\n  draw() {\n    let pen = this.pen;\n    let c = pen.ctx;\n\n    c.fillStyle = 'rgba(0,0,0,1.0)';\n    c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    c.lineWidth = 3;\n\n    pen.moveTo(0, 0);\n    pen.pendown();\n    pen.right(90);\n    pen.right(45);\n    pen.stroke();\n\n    for (let i = 0; i < this.dataArray.length - 1; i++) {\n      let data = this.dataArray[i];\n      let next_data = this.dataArray[i + 1];\n      c.lineWidth = Math.abs(data - next_data) * 4;\n\n      if (i < this.dataArray.length / 3) {\n        c.strokeStyle = 'rgba(' + data + ',125,' + Math.abs(data - next_data) + ',1.0)';\n      } else if ((i > this.dataArray.length / 3) && (i < (this.dataArray.length / 3) * 2)) {\n        c.strokeStyle = 'rgba(' + Math.abs(data - next_data) + ',' + data + ',125,1.0)';\n      } else {\n        c.strokeStyle = 'rgba(125,' + Math.abs(data - next_data) + ',' + data + ',1.0)';\n      }\n\n      if (i === Math.floor(this.dataArray.length / 3)) {\n        pen.penup();\n        pen.dir = 135;\n        let x = this.canvas.width;\n        let y = 0;\n        pen.moveTo(x, y);\n        pen.pendown();\n        pen.stroke();\n      } else if (i === Math.floor((this.dataArray.length / 3) * 2)) {\n        pen.penup();\n        pen.dir = 270;\n        let x = this.canvas.width / 2;\n        let y = this.canvas.height;\n        pen.moveTo(x, y);\n        pen.pendown();\n        pen.stroke();\n      }\n\n      pen.right(data - next_data);\n      pen.forward(3);\n      pen.stroke();\n    }\n  }\n}\n","import Turtle from 'turtle-canvas/browser/turtle-canvas.min';\n\nexport default class DaphneVisual3 {\n  constructor(name) {\n    this.name = name;\n  }\n\n  init() {\n    this.pen = new Turtle.TURTLE(this.canvas);\n  }\n\n  draw() {\n    let pen = this.pen;\n    let c = pen.ctx;\n\n    c.fillStyle = 'rgba(0,0,0,1.0)';\n    c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    pen.moveTo(0, this.canvas.height / 3);\n    pen.pendown();\n    pen.dir = 0;\n\n    for (let i = 0; i < this.dataArray.length - 1; i++) {\n      let data = this.dataArray[i];\n      let next_data = this.dataArray[i + 1];\n      c.lineWidth = Math.abs(data - next_data) * 20;\n\n      if (i < this.dataArray.length / 4) {\n        c.strokeStyle = 'rgba(' + data + ',' + Math.abs(data - next_data) * 4 + ',' + next_data + ',0.5)';\n      } else if ((i > this.dataArray.length / 4) && (i < (this.dataArray.length / 4) * 2)) {\n        c.strokeStyle = 'rgba(0,' + data + ',' + Math.abs(data - next_data) * 14 + ',0.5)';\n      } else if ((i > this.dataArray.length / 4) * 2 && (i < (this.dataArray.length / 4) * 3)) {\n        c.strokeStyle = 'rgba(0,' + data + ',' + next_data + ',0.5)';\n      } else {\n        c.strokeStyle = 'rgba(' + Math.abs(data - next_data) * 10 + ',' + next_data + ',' + data + ',0.5)';\n      }\n\n      if (i === Math.floor(this.dataArray.length / 4)) {\n        pen.penup();\n        pen.dir = 0;\n        let x = 0;\n        let y = (this.canvas.height / 3) * 2;\n        pen.moveTo(x, y);\n        pen.pendown();\n      } else if (i === Math.floor((this.dataArray.length / 4) * 2)) {\n        pen.penup();\n        pen.dir = 180;\n        let x = this.canvas.width;\n        let y = this.canvas.height / 3;\n        pen.moveTo(x, y);\n        pen.pendown();\n      } else if (i === Math.floor((this.dataArray.length / 4) * 3)) {\n        pen.penup();\n        pen.dir = 180;\n        let x = this.canvas.width;\n        let y = (this.canvas.height / 3) * 2;\n        pen.moveTo(x, y);\n        pen.pendown();\n      }\n\n      pen.right(data - next_data);\n      pen.forward(3);\n      pen.stroke();\n    }\n  }\n}\n","export default class DaphneVisual4 {\n  constructor(name, canvas) {\n    this.name = name;\n    this.canvas = canvas;\n  }\n\n  init() {\n    this.c = this.canvas.getContext('2d');\n  }\n\n  draw() {\n    let c = this.c;\n\n    c.fillStyle = 'rgba(0,0,0,1.0)';\n    c.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    let x = -20;\n    let y = 20;\n\n    for (let i = 0; i < this.dataArray.length; i++) {\n      let data = this.dataArray[i];\n\n      if ((x + 40) < this.canvas.width) {\n        x = x + 40;\n      } else {\n        x = 20;\n        y = y + 40;\n      }\n\n      let r = (1.0 - (Math.abs(128 - data) / 128)) * 20;\n      let antiData = Math.floor((1.0 - (data / 256)) * 255);\n      this.canvasContext.fillStyle = \"rgba(\" + data + \",\" + Math.abs(data - antiData) * 2 + \",\" + antiData + \",1.0)\";\n      this.canvasContext.beginPath();\n      this.canvasContext.arc(x, y, r, 0, 2 * Math.PI, false);\n      this.canvasContext.fill();\n\n      this.canvasContext.fillStyle = \"rgba(\" + Math.abs(data - antiData) + \",\" + data + \",\" + antiData + \",1.0)\";\n      this.canvasContext.beginPath();\n      this.canvasContext.arc(x, y, r / 2, 0, 2 * Math.PI, false);\n      this.canvasContext.fill();\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport Turtle from 'turtle-canvas/browser/turtle-canvas.min';\nimport JeremyVisual1 from './visuals/jeremyVisual1';\nimport JeremyVisual2 from './visuals/jeremyVisual2';\nimport DaphneVisual1 from './visuals/daphneVisual1';\nimport DaphneVisual2 from './visuals/daphneVisual2';\nimport DaphneVisual3 from './visuals/daphneVisual3';\nimport DaphneVisual4 from './visuals/daphneVisual4';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visuals: []\n    };\n\n    this.audioPlayer = null;\n    this.audioContext = null;\n    this.audioPlayerSource = null;\n    this.audioAnalyser = null;\n    this.bufferLength = 0;\n    this.dataArray = null;\n    this.canvas = null;\n    this.canvasContext = null;\n    this.backgroundFillStyle = '';\n    this.pen = null;\n    this.processAudioHandle = null;\n    this.selectedVisual = 0;\n    this.audioPlayerFile = null;\n    this.fullscreen = false;\n    this.visualsList = null;\n  }\n\n  componentDidMount() {\n    this.canvas.width = 800;\n    this.canvas.height = 600;\n\n    this.canvas.addEventListener('click', () => {\n      if (!this.fullscreen) {\n        this.audioPlayer.style = 'display: none';\n        this.audioPlayerFile.style = 'display: none';\n        this.visualsList.style = 'display: none';\n        this.canvas.style = 'border: none';\n        document.getElementsByTagName(\"body\")[0].style = 'background: #000000';\n        document.documentElement.requestFullscreen();\n        this.fullscreen = true;\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n      }\n    });\n\n    this.exitFullscreen = this.exitFullscreen.bind(this);\n\n    document.addEventListener('fullscreenchange', this.exitFullscreen);\n    document.addEventListener('webkitfullscreenchange', this.exitFullscreen);\n    document.addEventListener('mozfullscreenchange', this.exitFullscreen);\n    document.addEventListener('MSFullscreenChange', this.exitFullscreen);\n\n    this.setState(() => ({\n      visuals: [\n        new JeremyVisual1('Jeremy Visual 1', this.canvas),\n        new JeremyVisual2('Jeremy Visual 2', this.canvas),\n        new DaphneVisual1('Daphne Visual 1', this.canvas),\n        new DaphneVisual2('Daphne Visual 2', this.canvas),\n        new DaphneVisual3('Daphne Visual 3', this.canvas),\n        new DaphneVisual4('Daphne Visual 4', this.canvas),\n      ]\n    }));\n\n    this.createAudioPlayer();\n    this.createAudioContext(() => {\n      this.createAudioPlayerSource();\n      this.createAudioAnalyzer(2048);\n      this.createAudioBuffer();\n      this.fillAudioBuffer();\n      this.connectAudioPlayerSourceToAudioAnalyzer();\n      this.connectAudioAnalyzerToDestination();\n      this.createCanvasContext();\n      this.createTurtle();\n      this.changeVisual(this.selectedVisual);\n      this.audioPlayerFile.onchange = this.changeAudioFile.bind(this);\n      this.processAudio();\n    });\n  }\n\n  exitFullscreen() {\n    if (this.fullscreen && !document.fullscreenElement && !document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {\n      this.audioPlayer.style = 'display: inline-block';\n      this.audioPlayerFile.style = 'display: inline-block';\n      this.visualsList.style = 'display: block';\n      this.canvas.style = 'border: 1px solid silver';\n      document.getElementsByTagName(\"body\")[0].style = 'background: #FFFFFF';\n      this.fullscreen = false;\n      this.canvas.width = 800;\n      this.canvas.height = 600;\n    }\n  }\n\n  createAudioPlayer() {\n    this.audioPlayer.src = 'audio/defcronyke-bucket_dumpster-02-touch_you.ogg';\n    this.audioPlayer.setAttribute('type', 'audio/ogg');\n    this.audioPlayer.setAttribute('controls', '');\n    this.audioPlayer.id = 'audio-player';\n  }\n\n  createAudioContext(callback) {\n    this.audioPlayer.onplay = () => {\n      if (!this.audioContext) {\n        this.audioContext = new AudioContext();\n\n        if (typeof callback === 'function') {\n          callback();\n        }\n      }\n    };\n  }\n\n  createAudioPlayerSource() {\n    this.audioPlayerSource = this.audioContext.createMediaElementSource(this.audioPlayer);\n  }\n\n  createAudioAnalyzer(fftSize) {\n    this.audioAnalyser = this.audioContext.createAnalyser();\n    this.audioAnalyser.fftSize = fftSize;\n    this.bufferLength = this.audioAnalyser.frequencyBinCount;\n  }\n\n  createAudioBuffer() {\n    this.dataArray = new Uint8Array(this.bufferLength);\n  }\n\n  fillAudioBuffer() {\n    this.audioAnalyser.getByteTimeDomainData(this.dataArray);\n  }\n\n  connectAudioPlayerSourceToAudioAnalyzer() {\n    this.audioPlayerSource.connect(this.audioAnalyser);\n  }\n\n  connectAudioAnalyzerToDestination() {\n    this.audioAnalyser.connect(this.audioContext.destination);\n  }\n\n  createCanvasContext() {\n    this.canvasContext = this.canvas.getContext('2d');\n    this.canvasContext.fillStyle = 'rgba(0, 0, 0, 1.0)';\n    this.canvasContext.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n    this.backgroundFillStyle = 'rgba(0, 0, 0, 1.0)';\n  }\n\n  createTurtle() {\n    this.pen = new Turtle.TURTLE(this.canvas);\n    this.pen.moveTo(this.canvas.width / 2, this.canvas.height / 2);\n  }\n\n  processAudio() {\n    this.processAudioHandle = requestAnimationFrame(this.processAudio.bind(this));\n    this.audioAnalyser.getByteTimeDomainData(this.dataArray);\n    let skip = true;\n\n    for (let i = 0; i < this.bufferLength; i++) {\n      let data = this.dataArray[i];\n\n      if (data !== 128) {\n        skip = false;\n      }\n    }\n\n    if (skip) {\n      return;\n    }\n\n    if (this.state.visuals.length > this.selectedVisual) {\n      this.state.visuals[this.selectedVisual].draw.bind(this)();\n    }\n  }\n\n  changeVisual(visualNum) {\n    this.selectedVisual = visualNum;\n\n    if (this.state.visuals.length > visualNum) {\n      console.log('Changing to visual: ' + this.state.visuals[this.selectedVisual].name);\n      this.state.visuals[this.selectedVisual].init.bind(this)();\n    }\n  }\n\n  changeAudioFile() {\n    if (this.audioPlayerFile.files[0]) {\n      this.audioPlayer.src = URL.createObjectURL(this.audioPlayerFile.files[0]);\n      this.createAudioContext();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <canvas ref={e => this.canvas = e} style={{ border: '1px solid silver' }} />\n        </div>\n        <div>\n          <audio ref={e => this.audioPlayer = e} />\n        </div>\n        <div>\n          <input ref={e => this.audioPlayerFile = e} type=\"file\" />\n        </div>\n        <div ref={e => this.visualsList = e}>\n          {this.state.visuals.map((v, i) => {\n            return (\n              <p key={i}>\n                <span onClick={() => this.changeVisual(i)} style={{ cursor: 'pointer' }}>{v.name}</span>\n              </p>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}